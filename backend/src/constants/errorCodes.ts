// Error Codes
// Descriptive error codes for API responses
// Frontend can map these codes to localized messages

export const ErrorCodes = {
  // Generic errors
  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  NOT_FOUND: 'NOT_FOUND',
  UNAUTHORIZED: 'UNAUTHORIZED',
  FORBIDDEN: 'FORBIDDEN',
  BAD_REQUEST: 'BAD_REQUEST',

  // Tenant errors
  TENANT_NOT_FOUND: 'TENANT_NOT_FOUND',
  TENANT_SLUG_ALREADY_EXISTS: 'TENANT_SLUG_ALREADY_EXISTS',
  TENANT_NAME_REQUIRED: 'TENANT_NAME_REQUIRED',
  TENANT_SLUG_REQUIRED: 'TENANT_SLUG_REQUIRED',
  TENANT_HAS_ACTIVE_EVENTS: 'TENANT_HAS_ACTIVE_EVENTS',
  TENANT_INACTIVE: 'TENANT_INACTIVE',
  TENANT_BRANDING_REQUIRED: 'TENANT_BRANDING_REQUIRED',

  // User errors
  USER_NOT_FOUND: 'USER_NOT_FOUND',
  USER_EMAIL_ALREADY_EXISTS: 'USER_EMAIL_ALREADY_EXISTS',
  USER_EMAIL_REQUIRED: 'USER_EMAIL_REQUIRED',
  USER_EMAIL_INVALID: 'USER_EMAIL_INVALID',
  USER_ROLE_INVALID: 'USER_ROLE_INVALID',
  USER_NOT_AUTHORIZED: 'USER_NOT_AUTHORIZED',
  USER_NOT_SUPERADMIN: 'USER_NOT_SUPERADMIN',
  USER_ALREADY_IN_TENANT: 'USER_ALREADY_IN_TENANT',
  USER_INACTIVE: 'USER_INACTIVE',
  USER_CANNOT_DELETE_SELF: 'USER_CANNOT_DELETE_SELF',

  // Event errors
  EVENT_NOT_FOUND: 'EVENT_NOT_FOUND',
  EVENT_NAME_REQUIRED: 'EVENT_NAME_REQUIRED',
  EVENT_DATES_REQUIRED: 'EVENT_DATES_REQUIRED',
  EVENT_INVALID_DATES: 'EVENT_INVALID_DATES',
  EVENT_START_DATE_REQUIRED: 'EVENT_START_DATE_REQUIRED',
  EVENT_END_DATE_REQUIRED: 'EVENT_END_DATE_REQUIRED',
  EVENT_END_BEFORE_START: 'EVENT_END_BEFORE_START',
  EVENT_LOCATION_REQUIRED: 'EVENT_LOCATION_REQUIRED',
  EVENT_TENANT_REQUIRED: 'EVENT_TENANT_REQUIRED',
  EVENT_INVALID_CAPACITY: 'EVENT_INVALID_CAPACITY',
  EVENT_ALREADY_ACTIVE: 'EVENT_ALREADY_ACTIVE',
  EVENT_ALREADY_COMPLETED: 'EVENT_ALREADY_COMPLETED',
  EVENT_CANNOT_EDIT_COMPLETED: 'EVENT_CANNOT_EDIT_COMPLETED',
  EVENT_CANNOT_DELETE_ACTIVE: 'EVENT_CANNOT_DELETE_ACTIVE',

  // Authentication errors
  AUTH_TOKEN_MISSING: 'AUTH_TOKEN_MISSING',
  AUTH_TOKEN_INVALID: 'AUTH_TOKEN_INVALID',
  AUTH_TOKEN_EXPIRED: 'AUTH_TOKEN_EXPIRED',
  AUTH_INVALID_CREDENTIALS: 'AUTH_INVALID_CREDENTIALS',
  AUTH_PASSWORD_REQUIRED: 'AUTH_PASSWORD_REQUIRED',
  AUTH_TENANT_CONTEXT_REQUIRED: 'AUTH_TENANT_CONTEXT_REQUIRED',
  AUTH_INSUFFICIENT_PERMISSIONS: 'AUTH_INSUFFICIENT_PERMISSIONS',
  AUTH_CURRENT_PASSWORD_REQUIRED: 'AUTH_CURRENT_PASSWORD_REQUIRED',
  AUTH_NEW_PASSWORD_REQUIRED: 'AUTH_NEW_PASSWORD_REQUIRED',
  AUTH_CONFIRM_PASSWORD_REQUIRED: 'AUTH_CONFIRM_PASSWORD_REQUIRED',
  AUTH_PASSWORDS_DO_NOT_MATCH: 'AUTH_PASSWORDS_DO_NOT_MATCH',
  AUTH_PASSWORD_TOO_WEAK: 'AUTH_PASSWORD_TOO_WEAK',
  AUTH_INVALID_CURRENT_PASSWORD: 'AUTH_INVALID_CURRENT_PASSWORD',
  AUTH_NEW_PASSWORD_SAME_AS_CURRENT: 'AUTH_NEW_PASSWORD_SAME_AS_CURRENT',

  // Payment errors
  PAYMENT_NOT_FOUND: 'PAYMENT_NOT_FOUND',
  PAYMENT_INVALID_AMOUNT: 'PAYMENT_INVALID_AMOUNT',
  PAYMENT_METHOD_REQUIRED: 'PAYMENT_METHOD_REQUIRED',
  PAYMENT_STATUS_REQUIRED: 'PAYMENT_STATUS_REQUIRED',
  EVENT_ID_REQUIRED: 'EVENT_ID_REQUIRED',
  USER_ID_REQUIRED: 'USER_ID_REQUIRED',
  TENANT_ID_REQUIRED: 'TENANT_ID_REQUIRED',

  // Database errors
  DB_CONNECTION_ERROR: 'DB_CONNECTION_ERROR',
  DB_QUERY_ERROR: 'DB_QUERY_ERROR',
  DB_CONSTRAINT_VIOLATION: 'DB_CONSTRAINT_VIOLATION',
} as const;

// Type for error codes
export type ErrorCode = typeof ErrorCodes[keyof typeof ErrorCodes];